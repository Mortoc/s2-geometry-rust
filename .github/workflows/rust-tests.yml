name: Rust Tests

on:
  push:
    branches: [ main, 'releases/*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  rust-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      # Note: NOT checking out submodules to test Rust-only functionality
    
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.rust }}-cargo-
    
    - name: Build main library
      run: cargo build --verbose
    
    - name: Run main library tests
      run: cargo test --verbose --lib
    
    - name: Build C++ compatibility tests (should skip C++ parts)
      run: |
        cd cpp_compat_tests
        cargo build --verbose
    
    - name: Run C++ compatibility tests (should skip gracefully)
      run: |
        cd cpp_compat_tests
        cargo test --verbose -- --nocapture
    
    - name: Check code formatting (stable only)
      if: matrix.rust == 'stable'
      run: cargo fmt --all -- --check
    
    - name: Run Clippy lints (stable only)
      if: matrix.rust == 'stable'
      run: cargo clippy --all-targets -- -D warnings
    
    - name: Test documentation build
      if: matrix.rust == 'stable'
      run: cargo doc --no-deps --verbose
      
    - name: Generate test coverage report (stable only)
      if: matrix.rust == 'stable'
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Rust Version: ${{ matrix.rust }}" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Main library tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ C++ compatibility tests: SKIPPED (no submodule)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Code formatting: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Clippy lints: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This confirms the Rust library works independently without C++ dependencies." >> $GITHUB_STEP_SUMMARY